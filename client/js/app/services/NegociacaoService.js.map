{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","Negociacao","ConnectionFactory","NegociacaoDao","NegociacaoService","http","negociacao","getConnection","then","conexao","dao","adiciona","catch","console","log","erro","Error","connection","listaTodos","apagaTodos","listaAtual","obterNegociacoes","negociacoes","filter","some","isEquals","negociacaoExistente","Promise","all","obterNegociacoesDaSemanaRetrasada","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemana","periodos","reduce","dados","periodo","concat","get","map","Date","objeto","data","quantidade","valor"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\r\nimport {Negociacao} from '../models/Negociacao';\r\nimport {ConnectionFactory} from './ConnectionFactory';\r\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\r\n\r\nexport class NegociacaoService {\r\n\r\n  constructor() {\r\n    this.http = new HttpService();\r\n  }\r\n\r\n  cadastra(negociacao) {\r\n\r\n    return ConnectionFactory\r\n      .getConnection()\r\n      .then(conexao => new NegociacaoDao(conexao))\r\n      .then(dao => dao.adiciona(negociacao))\r\n      .then(() => 'Negociação cadastrada com sucesso')\r\n      .catch(erro => {\r\n        console.log(erro);\r\n        throw new Error('Não foi possível adicionar a negociação')\r\n      });\r\n\r\n  }\r\n\r\n  lista() {\r\n\r\n    return ConnectionFactory\r\n      .getConnection()\r\n      .then(connection => new NegociacaoDao(connection))\r\n      .then(dao => dao.listaTodos())\r\n      .catch(erro => {\r\n        console.log(erro);\r\n        throw new Error('Não foi possível obter as negociações');\r\n      })\r\n\r\n  }\r\n\r\n  apaga() {\r\n    \r\n    return ConnectionFactory\r\n      .getConnection()\r\n      .then(connection => new NegociacaoDao(connection))\r\n      .then(dao => dao.apagaTodos())\r\n      .then(() => 'Negociações apagadas com sucesso')\r\n      .catch(erro => {\r\n        console.log(erro);\r\n        throw new Error('Não foi possível apagar as negociações')\r\n      });\r\n\r\n  }\r\n\r\n  importa(listaAtual) {\r\n\r\n    return this.obterNegociacoes()\r\n      .then(negociacoes =>\r\n        negociacoes.filter(negociacao =>\r\n          !listaAtual.some(negociacaoExistente =>\r\n            negociacao.isEquals(negociacaoExistente)))\r\n      )\r\n      .catch(erro => {\r\n        console.log(erro);\r\n        throw new Error(\"Não foi possível importar as negociações\");\r\n      });\r\n  }\r\n\r\n  obterNegociacoes() {\r\n\r\n    return Promise.all([\r\n      this.obterNegociacoesDaSemanaRetrasada(),\r\n      this.obterNegociacoesDaSemanaAnterior(),\r\n      this.obterNegociacoesDaSemana()\r\n    ])\r\n    .then(periodos => {\r\n      \r\n      let negociacoes = periodos\r\n        .reduce((dados, periodo) => dados.concat(periodo), []);\r\n\r\n      return negociacoes;\r\n    })\r\n    .catch(erro => {\r\n        throw new Error(erro);\r\n    });\r\n\r\n  }\r\n\r\n  obterNegociacoesDaSemana() {\r\n\r\n      return this.http\r\n        .get('negociacoes/semana')\r\n        .then(negociacoes => {\r\n          return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n        })\r\n        .catch(erro => {\r\n          console.log(erro);\r\n          throw new Error('Não foi possível obter as negociações da semana');\r\n        });\r\n\r\n  }\r\n\r\n  obterNegociacoesDaSemanaAnterior() {\r\n    \r\n    return this.http\r\n      .get('negociacoes/anterior')\r\n      .then(negociacoes => {\r\n        return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n      })\r\n      .catch(erro => {\r\n        console.log(erro);\r\n        throw new Error('Não foi possível obter as negociações da semana anterior');\r\n      });\r\n\r\n  }\r\n\r\n  obterNegociacoesDaSemanaRetrasada() {\r\n   \r\n    return this.http\r\n      .get('negociacoes/retrasada')\r\n      .then(negociacoes => {\r\n        return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n      })\r\n      .catch(erro => {\r\n        console.log(erro);\r\n        throw new Error('Não foi possível obter as negociações da semana retrasada');\r\n      });\r\n\r\n  }\r\n\r\n}"]}